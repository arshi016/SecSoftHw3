//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MiniC.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniCParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IMiniCVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MiniCParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarations([NotNull] MiniCParser.DeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecl([NotNull] MiniCParser.DeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MiniCParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.sectype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSectype([NotNull] MiniCParser.SectypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MiniCParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] MiniCParser.CommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.noopCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNoopCommand([NotNull] MiniCParser.NoopCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.assignCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignCommand([NotNull] MiniCParser.AssignCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.ifCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfCommand([NotNull] MiniCParser.IfCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.whileCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileCommand([NotNull] MiniCParser.WhileCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.printSCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintSCommand([NotNull] MiniCParser.PrintSCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.printECommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintECommand([NotNull] MiniCParser.PrintECommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.getIntCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetIntCommand([NotNull] MiniCParser.GetIntCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.getSecretIntCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetSecretIntCommand([NotNull] MiniCParser.GetSecretIntCommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] MiniCParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] MiniCParser.IdContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInteger([NotNull] MiniCParser.IntegerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniCParser.bool"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBool([NotNull] MiniCParser.BoolContext context);
}
